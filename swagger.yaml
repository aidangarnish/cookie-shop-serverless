openapi: 3.0.2
info:
  version: "0.1"
  title: Cookie Shop API
  description: API for cookies

paths:
  /cookies:
    get:
      description: get a list of cookies for sale
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CookiesResponse"
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CookiesGetLambda.Arn}/invocations"
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    post:
      description: add cookies to sell
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CookieRequest"
        required: true
      responses:
        201:
          description: created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CookieResponse"
        400:
          description: "Bad Request"
      x-amazon-apigateway-request-validator: "Validate-body"
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CookiesPostLambda.Arn}/invocations"
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  /orders:
    post:
      description: order some cookies
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequest"
        required: true
      responses:
        201:
          description: created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponse"
        400:
          description: "Bad Request"
      security:
        - sigv4: []
      x-amazon-apigateway-request-validator: "Validate-body"
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OrdersPostLambda.Arn}/invocations"
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
securityDefinitions:
  sigv4:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    x-amazon-apigateway-authtype: "awsSigv4"
components:
  schemas:
    CookieRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        quantity:
          type: integer
          format: int32
    CookiesResponse:
      type: array
      items:
        $ref: "#/components/schemas/CookieResponse"
    CookieResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        quantity:
          type: integer
          format: int32
    OrderRequest:
      type: object
      properties:
        cookie_id:
          type: string
        quantity:
          type: integer
          format: int32
    OrderResponse:
      type: object
      properties:
        id:
          type: string
  x-amazon-apigateway-request-validators:
    Validate-body:
      validateRequestParameters: false
      validateRequestBody: true
